#!/usr/bin/env bash

function generate_functions_synopsis() {
    local -r root="$1"; \
    local -r sink="$2"; \
    cat "$sink" > "${sink%.*}.bac" ; \
    echo -e "## functions-synopsis \n" > "$sink"; \
    find "$root" -type f \
    -a -name *.go \
    -a -not -name *_test.go \
    -a -not -name *.pb.go | while read file; do \
    IFS=$'\n'; \
    local targets=($(grep -noP '(?<=func ).*?(?= \{)' "$file")); \
    for line in "${targets[@]}";do \
    local number=$(echo "$line"|cut -d: -f1) ; \
    local signature=$(echo "$line"|cut -d: -f2) ; \
    echo  "- \`$signature\`" >> "$sink"; \
    echo  "   - [  file path  ] : \`$file\`">> "$sink"; \
    echo  "   - [ line number ] : \`$number\`" >> "$sink"; \
    echo  "   - [   synopsis  ] :" >> "$sink"; \
    unset number; unset signature; \
    done; \
    unset IFS; \
    done;
}
if [ -z "${BASH_SOURCE+x}" ]; then
    generate_functions_synopsis "$@"
    exit $?
else
    if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
        generate_functions_synopsis "$@"
        exit $?
    else
        export -f generate_functions_synopsis 
    fi
fi